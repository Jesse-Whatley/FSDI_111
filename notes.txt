CLASS 111 NOTES

install Ubuntu
    * install ubuntu ()
    * ubuntu username (jesse)
    * ubuntu password (letssmoke1)

    * install python on ubuntu
        *sudo apt install python3 
        *sudo apt install python3-pip 
        *sudo apt install python3-venv 
    
    * making new directory
        *mkdir -p (this will create a directory with the pathway)  (ex:of -p Code/SDGKU/FSDI_111)
        *pwd (takes you back to where you originated the file)

    * creating virtual enviroment 
        * python3 -m venv venv
        * source venv/bin/activate (activate venv)
        * install flask (pip3 install flask)
        * to update pip (pip install --upgrade pip)
        * deactivate (deactivate venv)

    * creating directories
        * mkdir app
            ** (to make files inside of file)
            * touch app/routes.py
            * touch app/__init__.py
        * touch run_local.sh
        * open visualstudio code (code .)

OOP : Object Oriented Programming 

flask is 

class is to object as blueprint is to house
variable = attribute when attached to a class
routine = methoud when attached to a class

(__magic__) come in classes, methods, files
they interact with 

@ in python means a decorator/ rapper (ex: @app.get("/))
purpose of decorator is to map 

loop back ip address 127.0.0.1 (local host)

idempotent == look up for homework == is a function that gives same peramiter =(ex==garbage in garbage out)

applicaton: must have a user interface
user interface: is what the user interacts with
service: is what communicates with the application

HTTP == hyper text 

REST == resper

mongoDB == the data is unstructred meaning it has no structure

Relational DataBase == SQLite (SQL==server query language) MySQL 


install SQLite on Ubuntu
    * sudo apt install sqlite3

whats the fundamental purpose of a database engine
    * to persist data 
    * Persist means to store data on the harddrive 

how to create a databasein SQLite
    * sqlite3 sandbox.db

     CREATE TABLE user (
   ...> id INTEGER PRIMARY KEY AUTOINCREMENT,
   ...> first_name VARCHAR(45),
   ...> last_name VARCHAR(45),
   ...> hobbies TEXT,
   ...> is_online BOOLEAN DEFAULT 1);

Sql is not case sensitive (UPPERCASE= sql / lowercase= imformation im adding) == 

in sql there are 2 types of statements:
    * Commands - effect change in database


    * Queries - dont trigger change they are used for read only 


CRUD = Create Read Update Delete = one record at a time 
CRUDS = Create Read Update Delete Scan = multiple records at a time 

create an new record (CREATE)
    *  INSERT INTO user (
   ...> first_name,
   ...> last_name,
   ...> hobbies
   ...> ) VALUES (
   ...> "Jesse",
   ...> "Whatley",
   ...> "Cooking reading and crocheting");

show the record (READ)
    * SELECT * FROM user WHERE id=1; (* means all the record) (id=1)  read operation shows only 1 record

    * SELECT * FROM user;  scan operation shows all records

Pagination == look up definition

update the record
    * UPDATE user SET
   ...> first_name="Joe",
   ...> last_name="Phillips",
   ...> hobbies="Pocasts"
   ...> WHERE id=1;     this is important 

delete the record
    * DELETE FROM user WHERE id=1


GIT terminal
git config -l (list our config)
git add -A (stages changes)
cd ~/Code/SDGKU/{name of file} (how to switch directories)

install requests
    *pip3 install requests


